* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --text-color: white;
    --bg-url: url('./assets/bg-mobile.jpg');
    --stroke-color: rgba(255, 255, 255, 0.5);
    --surface-color: rgba(255, 255, 255, 0.1);
    --surface-color-hover: rgba(255, 255, 255, 0.05);
    --highlight-color: rgba(255, 255, 255, 0.2);
    --switch-bg-url: url(./assets/moon-stars.svg);
}

.light {
    --text-color: black;
    --bg-url: url(./assets/bg-mobile-light.jpg);
    --stroke-color: rgba(0, 0, 0, 0.5);
    --surface-color: rgba(0, 0, 0, 0.05);
    --surface-color-hover: rgba(0, 0, 0, 0.02);
    --highlight-color: rgba(0, 0, 0, 0.1);
    --switch-bg-url: url(./assets/sun.svg);
}

body {
    /* background-image: url('./assets/bg-mobile.jpg');
    background-repeat: no-repeat;
    background-position: top center;
    background-size: cover; */

    /* Não tem apenas esses valores para o background, mas esses são os necessários para esse projeto */
    /* background: color image repeat position/size */
    background: var(--bg-url) no-repeat top center/cover;
    height: 100vh;
}

body * {
    font-family: 'Inter', sans-serif;
    color: var(--text-color);
}

#container {
    width: 100%;
    max-width: 588px;
    /* Existe uma regra no css que não aplica margin auto nem na parte superior e nem na inferior, somente é aplicado aos lados. */
    margin: 56px auto 0px;
    padding: 0 24px;
}

/* Elementos inline podem ser alinhados a partir do pai deles com o text-align. Então poderiamos usar o regra abaixo para centralizar a imagem também, mas essa não poderia ter o display block, mas sim inline.
*/

/* PROFILE */
#profile {
    text-align: center;
    padding: 24px;
}


#profile img {
    /* A img é um elemento inline, e não se pode aplicar no margin auto em elementos inline, por isso foi mudado para block. */
    /* display: block; */
    width: 112px;
    /* margin: auto; */
}

#profile p {
    font-weight: 500;
    line-height: 24px;
    padding-top: 8px;
}


/* Switch */
#switch {
    position: relative;
    width: 64px;

    margin: 4px auto;
}

#switch button {
    width: 32px;
    height: 32px;
    background: white var(--switch-bg-url) no-repeat center;
    border: 0;
    border-radius: 50%;

    /* Se colocar position absolute em um elemento, esse vai ficar com um posicionamento absoluto em relação a página toda, mas se colocar um position relative em seu elemento pai, o filho que está com position absolute vai ficar com essa propriedade em releção ao pai, e não mais a página. */
    position: absolute;
    top: 50%;
    left: 0;
    z-index: 1;
    /* Alinhar position absolute ao centro na horizontal, tirar 50% com o transform no Y e colocar com o top: 50% ou o bottom, para alinhar na vertical é a mesma ideia só que no eixo X e com o right e left. */
    transform: translateY(-50%);

    /* Animação de volta do botão */
    /* Esse buton tem a propriedade final de left: 0, então não precisa colocar o 'forwards'. */
    animation: slide-back .2s;
}

.light #switch button {
    /* left: initial;
    right: 0; */
    /* Para deixar animado usado a at rule @keyframes, com a propriedade animation, aonde você quer aquela animação. Quando a animação acabar, o elemento que tem essa animação vai voltar para a posição inicial, para que isso não ocorra, é preciso colocar o 'forwards'. O 'forwards' irá manter as propriedades finais(to) atribuidas no @keyframes. */
    animation: slide-in 0.2s forwards;
}

#switch button:hover {
    /* Cor que fica ao redor do botão. */
    outline: 8px solid var(--highlight-color);
}

#switch span {
    display: block;
    width: 64px;
    height: 24px;
    background: var(--surface-color);
    border: 1px solid var(--stroke-color);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    border-radius: 9999px;
}

/* Links */
ul {
    list-style: none;

    display: flex;
    flex-direction: column;
    gap: 16px;

    padding: 24px 0;
}

ul li a {
    display: flex;
    justify-content: center;
    align-items: center;

    padding: 16px 24px;

    background: var(--surface-color);
    border: 1px solid var(--stroke-color);
    border-radius: 8px;

    backdrop-filter: blur(4px);

    text-decoration: none;
    font-weight: 500;

    transition: background 0.5s;
}

ul li a:hover {
    background: var(--surface-color-hover);
    border: 1.5px solid var(--text-color);
}

/* Social Links */
#social-links {
    display: flex;
    justify-content: center;

    padding: 24px 0;

    font-size: 24px;
}

#social-links a {
    display: flex;
    justify-content: center;
    align-items: center;

    padding: 16px;

    transition: background 0.2s;

    border-radius: 50%;
}

#social-links a:hover {
    background: var(--highlight-color);
}



footer {
    padding: 24px 0;

    font-size: 14px;

    text-align: center;
}


/* Media Queries */
@media (min-width: 700px) {
    :root {
        --bg-url: url(./assets/bg-desktop.jpg);
    }

    .light {
        --bg-url: url(./assets/bg-desktop-light.jpg);
    }
}

/* Animation */
/* @keyframes nomequevocêquer {} */
@keyframes slide-in {
    /* De onde vai começar a animação */
    from {
        left: 0;
    } /* Aonde vai terminar */
    to {
        left: 50%;
    }
}

@keyframes slide-back {
    from {
        left: 50%;
    }
    to {
        left: 0;
    }
}